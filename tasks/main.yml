---
- name: gather operating system variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_distribution_file_variety | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version.split('.')[0] }}.yml"
    - "{{ ansible_os_family | lower }}.yml"

- name: assert usage of systemd as an init system
  assert:
    that: ansible_service_mgr == 'systemd'
    msg: "This module only works with systemd"

- name: get systemd version
  command: systemctl --version
  changed_when: false
  check_mode: false
  register: __systemd_version

- name: set systemd version fact
  set_fact:
    squid_exporter_systemd_version: "{{ __systemd_version.stdout_lines[0].split(' ')[-1] }}"

- name: create system group
  group:
    name: "{{ squid_exporter_system_group }}"
    system: true
    state: present
  when: squid_exporter_system_group != "root"

- name: create system user
  user:
    name: "{{ squid_exporter_system_user }}"
    system: true
    shell: "/sbin/nologin"
    group: "{{ squid_exporter_system_group }}"
    createhome: false
  when: squid_exporter_system_user != "root"

- name: check if squid_exporter is installed
  stat:
    path: "{{ squid_exporter_binary_local_dir }}/squid_exporter"
  register: __squid_exporter_is_installed

- name: squid_exporter binary
  copy:
    src: "{{ role_path }}/files/squid_exporter_v{{ squid_exporter_version }}_{{ go_arch }}"
    dest: "{{ squid_exporter_binary_local_dir }}/squid_exporter"
    mode: 0755
    owner: root
    group: root
  notify: restart squid_exporter
  when: (not __squid_exporter_is_installed.stat.exists)

- name: create systemd service unit
  template:
    src: squid_exporter.service.j2
    dest: /etc/systemd/system/squid_exporter.service
    owner: root
    group: root
    mode: 0644
  notify: restart squid_exporter

- name: enable capabilities to ports lower than port 1024
  capabilities:
    path: "{{ squid_exporter_binary_install_dir }}/squid_exporter"
    capability: CAP_NET_BIND_SERVICE+ep
    state: present
  when: squid_exporter_web_listen_port <= 1024
  tags: squid_exporter

- name: allow binding to port in selinux
  seport:
    ports: "{{ squid_exporter_web_listen_port }}"
    proto: tcp
    setype: http_port_t
    state: present
  when:
    - ansible_version.full is version_compare('2.4', '>=')
    - ansible_selinux.status == "enabled"
  become: true
  tags: squid_exporter

- name: check whether ufw status is active
  command: "ufw status"
  changed_when: False
  ignore_errors: True
  register: _ufw_status
  become: true
  when:
    - squid_exporter_allow_firewall
    - ansible_os_family == 'Debian'
  tags: squid_exporter

- name: configure ufw
  community.general.ufw:
    rule: allow
    port: "{{ squid_exporter_web_listen_port }}"
    proto: tcp
    state: enabled
    comment: "squid_exporter"
  notify: reload ufw
  become: true
  tags: squid_exporter
  when:
    - "'active' in _ufw_status.stdout"
    - ansible_os_family == 'Debian'
    - squid_exporter_allow_firewall

- name: configure firewalld
  firewalld:
    port: "{{ squid_exporter_web_listen_port }}/tcp"
    permanent: yes
    state: true
  when:
    - squid_exporter_allow_firewall
    - ansible_os_family == 'RedHat'
  notify: reload firewalld
  become: true
  tags: squid_exporter

- name: ensure squid_exporter is enabled on boot
  systemd:
    daemon_reload: true
    name: squid_exporter
    enabled: true
    state: started